
{

	  
		"/upload/uploadImage/{userId}": {
		  "post": {
			"tags": [
			  "banners"
			],
			"summary": "uploads an image",
			"description": "",
			"operationId": "uploadFile",
			"consumes": [
			  "multipart/form-data"
			],
			"produces": [
			  "application/json"
			],
			"parameters": [
			  {
				"name": "userId",
				"in": "path",
				"description": "ID of user to update",
				"required": true,
				"type": "integer",
				"format": "int64"
			  },
			  {
				"name": "additionalMetadata",
				"in": "formData",
				"description": "Additional data to pass to server",
				"required": false,
				"type": "string"
			  },
			  {
				"name": "file",
				"in": "formData",
				"description": "file to upload",
				"required": false,
				"type": "file"
			  }
			],
			"responses": {
			  "200": {
				"description": "successful operation",
				"schema": {
				  "$ref": "#/definitions/ApiResponse"
				}
			  }
			},
			"security": [
			  {
				"petstore_auth": [
				  "write:pets",
				  "read:pets"
				]
			  }
			]
		  }
		},
		"/banner": {
		  "post": {
			"tags": [
			  "banners"
			],
			"summary": "banner method post",
			"description": "",
			"operationId": "testId",
			"consumes": [
			  "application/json",
			  "application/xml"
			],
			"produces": [
			  "application/json",
			  "application/xml"
			],
			"parameters": [
			  {
				"in": "body",
				"name": "body",
				"description": "test object that needs to be added",
				"required": true,
				"schema": {
				  "$ref": "#/definitions/Pet"
				}
			  }
			],
			"responses": {
			  "405": {
				"description": "Invalid input"
			  }
			},
			"security": [
			  {
				"petstore_auth": [
				  "write:pets",
				  "read:pets"
				]
			  }
			]
		  },
		  "put": {
			"tags": [
			  "banners"
			],
			"summary": "Update an existing pet",
			"description": "",
			"operationId": "updatePet",
			"consumes": [
			  "application/json",
			  "application/xml"
			],
			"produces": [
			  "application/json",
			  "application/xml"
			],
			"parameters": [
			  {
				"in": "body",
				"name": "body",
				"description": "Pet object that needs to be added to the store",
				"required": true,
				"schema": {
				  "$ref": "#/definitions/Pet"
				}
			  }
			],
			"responses": {
			  "400": {
				"description": "Invalid ID supplied"
			  },
			  "404": {
				"description": "Pet not found"
			  },
			  "405": {
				"description": "Validation exception"
			  }
			},
			"security": [
			  {
				"petstore_auth": [
				  "write:pets",
				  "read:pets"
				]
			  }
			]
		  }
		},
		"/banners?": {
		  "get": {
			"tags": [
			  "banners"
			],
			"summary": "Get banner",
			"description": "Multiple status values can be provided with comma separated strings",
			"operationId": "get banner",
			"produces": [
			  "application/json",
			  "application/xml"
			],
			"parameters": [
			  {
				"name": "limit",
				"in": "query",
				"description": "Status values that need to be considered for filter",
				"required": false,
				"type": "string"
			     
			  },
			  {
				"name": "skip",
				"in": "query",
				"description": "Status values that need to be considered for filter",
				"required": false,
				"type": "string"
			     
			  },
			  {
				"name": "is_visable",
				"in": "query",
				"description": "Status values that need to be considered for filter",
				"required": false,
				"type": "boolean"
			     
			  }
			],
			"responses": {
			  "200": {
				"description": "successful operation",
				"schema": {
				  "type": "array",
				  "items": {
					"$ref": "#/definitions/Pet"
				  }
				}
			  },
			  "400": {
				"description": "Invalid status value"
			  }
			},
			"security": [
			  {
				"petstore_auth": [
				  "write:pets",
				  "read:pets"
				]
			  }
			]
		  }
		}
	
	
	}